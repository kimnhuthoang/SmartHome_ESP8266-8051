C51 COMPILER V9.60.0.0   I2C_LCD                                                           05/29/2023 21:21:15 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE I2C_LCD
OBJECT MODULE PLACED IN .\Objects\i2c_lcd.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE i2c_lcd.c OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\Listings\i2c_lcd.l
                    -st) TABS(2) OBJECT(.\Objects\i2c_lcd.obj)

line level    source

   1          
   2          #include <REGX52.H>
   3          #include "intrins.h"
   4          #include "i2c_lcd.h"
   5          #include "soft_i2c.h"
   6          
   7          //------------------------------------------------------------------------------//
   8          void delay_ms(unsigned int t)
   9          {
  10   1        unsigned int i,j;
  11   1        for(i=0;i<t;i++)
  12   1        {
  13   2          for(j=0;j<123;j++);
  14   2          _nop_();_nop_();
  15   2        }
  16   1      }
  17          static void delay_us(unsigned int t)
  18          {
  19   1        while(t--);
  20   1      }
  21          //------------------------------------------------------------------------------//
  22          static void lcd_i2c_write(unsigned char Address,unsigned char *dat,unsigned char b)
  23          {
  24   1        unsigned char i;
  25   1      
  26   1        i2c_start();
  27   1        i2c_write(Address);
  28   1        for(i=0;i<b;i++) 
  29   1        {
  30   2          while(i2c_write(dat[i]));
  31   2        }
  32   1        i2c_stop();
  33   1      }
  34          //------------------------------------------------------------------------------//
  35          static unsigned char lcd_buff[8];
  36          static unsigned char byte_data;
  37          
  38          static void I2C_LCD_Write_4bit(unsigned char dat,unsigned char address);
  39          static void I2C_LCD_SEND_DATA(unsigned char i2c_lcd_address);
  40          void I2C_LCD_WriteCmd(unsigned char cmd,unsigned char address);
  41          //------------------------------------------------------------------------------//
  42          static void I2C_LCD_SEND_DATA(unsigned char i2c_lcd_address)
  43          {
  44   1        unsigned char i;
  45   1        for (i=0;i<8;i++) 
  46   1        {
  47   2          byte_data>>=1;
  48   2          if(lcd_buff[i]) 
  49   2          {
  50   3            byte_data|=0x80;
  51   3          }
  52   2        }
  53   1        lcd_i2c_write(i2c_lcd_address,&byte_data,1);
  54   1      }
C51 COMPILER V9.60.0.0   I2C_LCD                                                           05/29/2023 21:21:15 PAGE 2   

  55          //------------------------------------------------------------------------------//
  56          static void I2C_LCD_Write_4bit(unsigned char dat,unsigned char address)
  57          {
  58   1        lcd_buff[LCD_D7] = (bit)(dat&0x08);
  59   1        lcd_buff[LCD_D6] = (bit)(dat&0x04);
  60   1        lcd_buff[LCD_D5] = (bit)(dat&0x02);
  61   1        lcd_buff[LCD_D4] = (bit)(dat&0x01);
  62   1      
  63   1        lcd_buff[LCD_EN] = 1;
  64   1        I2C_LCD_SEND_DATA(address); 
  65   1        lcd_buff[LCD_EN] = 0;
  66   1        I2C_LCD_SEND_DATA(address);
  67   1        
  68   1      }
  69          //------------------------------------------------------------------------------//
  70          void I2C_LCD_WriteCmd(unsigned char cmd,unsigned char address)
  71          {
  72   1        lcd_buff[LCD_RS] = 0;
  73   1        I2C_LCD_SEND_DATA(address);
  74   1        
  75   1        lcd_buff[LCD_RW] = 0;
  76   1        I2C_LCD_SEND_DATA(address);
  77   1        
  78   1        I2C_LCD_Write_4bit(cmd >> 4,address);
  79   1        I2C_LCD_Write_4bit(cmd&0x0f,address);
  80   1      }
  81          //------------------------------------------------------------------------------//
  82          void I2C_LCD_PutC(char cp,unsigned char address)
  83          {
  84   1        lcd_buff[LCD_RS] = 1;
  85   1        I2C_LCD_SEND_DATA(address);
  86   1        
  87   1        lcd_buff[LCD_RW] = 0;
  88   1        I2C_LCD_SEND_DATA(address);
  89   1        
  90   1        I2C_LCD_Write_4bit(cp >> 4,address);
  91   1        I2C_LCD_Write_4bit(cp&0x0f,address);
  92   1        
  93   1      }
  94          //------------------------------------------------------------------------------//
  95          void I2C_LCD_PutS(char *s,unsigned char address)
  96          {
  97   1        while(*s) I2C_LCD_PutC(*s++,address);
  98   1      }
  99          
 100          void I2C_LCD_PutnS(char *s, unsigned char m, unsigned char n,unsigned char address)
 101          {
 102   1        unsigned char i;
 103   1        s += m;
 104   1        for(i = 0; i < n; i++)
 105   1        {
 106   2          I2C_LCD_PutC(*s,address);
 107   2          s++;
 108   2        }
 109   1      }
 110          
 111          void I2C_LCD_PutNumber(char num,unsigned char address)
 112          {
 113   1        I2C_LCD_PutC(num+0x30,address);
 114   1      }
 115          //------------------------------------------------------------------------------//
 116          void I2C_LCD_Clear(unsigned char address)
C51 COMPILER V9.60.0.0   I2C_LCD                                                           05/29/2023 21:21:15 PAGE 3   

 117          {
 118   1        I2C_LCD_WriteCmd(0x01,address);
 119   1      }
 120          //------------------------------------------------------------------------------//
 121          void I2C_LCD_Gotoxy(unsigned char x,y,adress)
 122          {
 123   1        unsigned char address_xy;
 124   1        if(y==1) address_xy=(0x80+x-1);
 125   1        if(y==2) address_xy=(0xc0+x-1);
 126   1        if(y==3) address_xy=(0x94+x-1);
 127   1        if(y==4) address_xy=(0xd4+x-1);
 128   1        I2C_LCD_WriteCmd(address_xy,adress);
 129   1      }
 130          //------------------------------------------------------------------------------//
 131          void I2C_LCD_BackLight(unsigned char BackLight,unsigned char address)
 132          {
 133   1        if(BackLight) lcd_buff[LCD_BL] = 1;
 134   1        else lcd_buff[LCD_BL] = 0;
 135   1        I2C_LCD_SEND_DATA(address);
 136   1      }
 137          //------------------------------------------------------------------------------//
 138          void I2C_LCD_Init(unsigned char address)
 139          {
 140   1        unsigned char i;
 141   1        delay_ms(20);
 142   1        i2c_init();
 143   1        for(i=0;i<8;i++){lcd_buff[i]=0;}
 144   1        I2C_LCD_SEND_DATA(address);
 145   1      
 146   1        I2C_LCD_WriteCmd(0x30,address); delay_ms(5);
 147   1        I2C_LCD_WriteCmd(0x30,address); delay_us(10);
 148   1        I2C_LCD_WriteCmd(0x30,address); delay_us(4);
 149   1        I2C_LCD_WriteCmd(0x02,address); delay_ms(2);
 150   1        I2C_LCD_WriteCmd(0x28,address); delay_us(4);
 151   1        I2C_LCD_WriteCmd(0x0C,address); delay_us(4);
 152   1        I2C_LCD_WriteCmd(0x06,address); delay_us(4);
 153   1        I2C_LCD_WriteCmd(0x80,address); delay_us(4);
 154   1        I2C_LCD_WriteCmd(0x01,address); delay_ms(2);
 155   1      }
 156          //------------------------------------------------------------------------------//


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    594    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9      24
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
